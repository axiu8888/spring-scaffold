ext {

//  springbootVersion = "3.1.5"
//  springDependencyManagementVersion = "1.1.3"
//  springIntegrationVersion = "6.1.4"
  springbootVersion = "2.7.17"
  springDependencyManagementVersion = "1.0.15.RELEASE"
  springIntegrationVersion = "5.5.19"

  lombokVersion = "1.18.30"
  jacksonVersion = "2.15.3"
  guavaVersion = '32.1.3-jre'
  fastjson2Version = '2.0.42'
  commonsIOVersion = "2.15.0"
  commonsLang3Version = "3.13.0"
  slf4jVersion = '2.0.9'
  hutoolVersion = '5.8.23'

  aspectjVersion = "1.9.20"
  swaggerVersion = "3.0.0"
  knife4jVersion = "4.3.0"
  jjwtVersion = "0.12.3"
  nettyAllVersion = '4.1.101.Final'
  vertxVersion = "4.4.6"

  rxJavaVersion = '2.2.21'
  okHttpVersion = '4.10.0'
  retrofitVersion = '2.9.0'

  mysqlVersion = "8.2.0"
  postgresqlVersion = "42.6.0"
  druidVersion = "1.2.20"
  mybatisPlusVersion = "3.5.4.1"
  pagehelperVersion = "2.0.0"
  mybtaisVersion = "2.3.1"
  mapperVersion = "4.2.3"

  try {
    def props = new Properties()
    props.load(new FileReader("${getRootDir()}/nexus.properties"))
    repoUrl = props["repoUrl"]
    repoUsername = props["repoUsername"]
    repoPassword = props["repoPassword"]
  } catch (e) {
    e.printStackTrace()
  }
}

subprojects {

  apply plugin: 'java'

  group = 'com.benefitj.springboot'
  version = "2.0.0-SNAPSHOT"
  archivesBaseName = "scaffold-${getProject().name}"

  ext {
    groupId = "${group}"
    artifactPrefix = ""
    artifactId = "${getProject().name}"
    versionId = "${version}"

    // 默认是spring环境
    springEnv = true

    manifestAttributes = [
        "version"   : "$version",
        "build-date": "${new Date().format('yyyy-MM-dd')}",
        "author"    : "axiu8888",
        "home"      : "https://github.com/axiu8888/${rootProject.name}",
    ]
  }

  sourceCompatibility = JavaVersion.VERSION_15
  targetCompatibility = JavaVersion.VERSION_15


  repositories {
    maven { url("https://maven.aliyun.com/repository/google") }
    maven { url("https://maven.aliyun.com/repository/central") }
    maven { url("https://maven.aliyun.com/repository/gradle-plugin") }
    maven { url("https://maven.aliyun.com/repository/public") }
    maven { url("https://maven.aliyun.com/repository/jcenter") }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/release' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }

    try {
      maven {
        url = repoUrl
        allowInsecureProtocol = true
        credentials {
          username repoUsername
          password repoPassword
        }
      }
    } catch (e) {/* ~ */}
  }
}
